<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyFaceApi.Api</name>
    </assembly>
    <members>
        <member name="M:MyFaceApi.Api.Controllers.NotificationsController.GetNotification(System.String,System.String)">
            <summary>
            Return the found notification
            </summary>
            <param name="userId"></param>
            <param name="notificationId">Notification guid as a string </param>
            <returns>Found notification</returns>
            <response code="200"> Returns the found notification</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If notification not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.NotificationsController.GetNotifications(System.String)">
            <summary>
            Return the found user notifications
            </summary>
            <param name="userId">User guid as a string </param>
            <returns>Found user notifications</returns>
            <response code="200"> Returns the found user notifications</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If user or notifications not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.NotificationsController.AddNotification(System.String,MyFaceApi.Api.Application.DtoModels.Notification.NotificationToAddDto)">
            <summary>
            Add notification to database
            </summary>
            <param name="userId">User guid as a string </param>
            <param name="notificationToAdd"></param>
            <returns>Added reaction</returns>
            <response code="201"> Return created notification</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If user not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.NotificationsController.PartiallyUpdateNotification(System.String,System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{MyFaceApi.Api.Application.DtoModels.Notification.NotificationToUpdateDto})">
            <summary>
            Update notification in the database
            </summary>
            <param name="userId"></param>
            <param name="notificationId"></param>
            <param name="patchDocument"></param>
            <returns>
            Status 204 no content if the notification has been updated
            </returns>
            <response code="204"> No content if the notification has been updated</response>
            <response code="400"> If the notificationId is not valid guid</response>    
            <response code="404"> If the notification not found</response>
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.NotificationsController.DeleteNotification(System.String,System.String)">
            <summary>
            Remove the notification from the database
            </summary>
            <param name="userId"></param>
            <param name="notificationId"></param>
            <returns>
            Status 204 no content if the notification has been removed
            </returns>
            <response code="204"> No content if the notification has been removed</response>
            <response code="400"> If the notificationId is not valid guid</response>    
            <response code="404"> If the notification not found</response>
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostCommentsController.AddComment(System.String,System.String,MyFaceApi.Api.Application.DtoModels.PostComment.PostCommentToAddDto)">
            <summary>
            Add post to database
            </summary>
            <param name="userId">User guid as a string </param>
            <param name="postId">Post guid as a string</param>
            <param name="postComment">Comment to add of a type CommentToAdd</param>
            <returns>Added post</returns>
            <response code="201"> Return created comment</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If user or post not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostCommentsController.GetComments(System.String,Pagination.Helpers.PaginationParams)">
            <summary>
            Return the found post comments
            </summary>
            <param name="postId">Post guid as a string </param>
            <param name="paginationParams"></param>
            <returns>Found post comments</returns>
            <response code="200"> Returns the found post comments</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If post not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostCommentsController.GetComment(System.String,System.String)">
            <summary>
            Return the found comment
            </summary>
            <param name="postId">Post guid as a string </param>
            <param name="commentId">Comment guid as a string </param>
            <returns>Found comment</returns>
            <response code="200"> Returns the found comments</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If post or comment not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostCommentsController.PartiallyUpdateComment(System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{MyFaceApi.Api.Application.DtoModels.PostComment.PostCommentToUpdateDto})">
            <summary>
            Update comment in database
            </summary>
            <param name="commentId"></param>
            <param name="patchDocument"></param>
            <returns>
            Status 204 no content if the comment has been updated
            </returns>
            <response code="204"> No content if the comment has been updated</response>
            <response code="400"> If the comment is not valid</response>    
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostCommentsController.DeleteComment(System.String)">
            <summary>
            Remove a comment from the database
            </summary>
            <param name="commentId"></param>
            <returns>
            Status 204 no content if the comment has been removed
            </returns>
            <response code="204"> No content if the comment has been updated</response>
            <response code="400"> If the post is not valid</response>    
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostReactionsController.AddPostReaction(System.String,System.String,MyFaceApi.Api.Application.DtoModels.PostReaction.PostReactionToAddDto)">
            <summary>
            Add comment to database
            </summary>
            <param name="userId">User guid as a string </param>
            <param name="postId">Post guid as a string</param>
            <param name="reactionToAdd">Reaction to add of type ReactionToAdd</param>
            <returns>Added reaction</returns>
            <response code="201"> Return created reaction</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If user or post not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostReactionsController.GetPostReactions(System.String)">
            <summary>
            Return the found post reaction
            </summary>
            <param name="postId">Post guid as a string </param>
            <returns>Found post reactions</returns>
            <response code="200"> Returns the found post reactions</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If post not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostReactionsController.GetPostReaction(System.String,System.String)">
            <summary>
            Return the found reaction
            </summary>
            <param name="postId">Post guid as a string </param>
            <param name="reactionId">Reaction guid as a string </param>
            <returns>Found reaction</returns>
            <response code="200"> Returns the found reaction</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If post or comment not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostReactionsController.PartiallyUpdatePostReaction(System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{MyFaceApi.Api.Application.DtoModels.PostReaction.PostReactionToUpdateDto})">
            <summary>
            Update reaction in database
            </summary>
            <param name="reactionId"></param>
            <param name="patchDocument"></param>
            <returns>
            Status 204 no content if the reaction has been updated
            </returns>
            <response code="204"> No content if the reaction has been updated</response>
            <response code="400"> If the reaction is not valid</response>    
            <response code="404"> If the reaction not found</response>
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostReactionsController.DeletePostReaction(System.String,System.String)">
            <summary>
            Remove a reaction from the database
            </summary>
            <param name="postId"></param>
            <param name="fromWho"></param>
            <returns>
            Status 204 no content if the reaction has been removed
            </returns>
            <response code="204"> No content if the reaction has been removed</response>
            <response code="400"> If the post is not valid</response>    
            <response code="404"> If the post not found</response>
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostsController.GetPost(System.String)">
            <summary>
            Return the found post
            </summary>
            <param name="postId">Post guid as a string </param>
            <returns>Found post</returns>
            <response code="200"> Returns the found post</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If post not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostsController.GetPosts(System.String,Pagination.Helpers.PaginationParams)">
            <summary>
            Return the found user posts
            </summary>
            <param name="userId">User guid as a string </param>
            <param name="paginationParams"></param>
            <returns>Found user posts</returns>
            <response code="200"> Returns the found user posts</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If user not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostsController.AddPost(System.String,MyFaceApi.Api.Application.DtoModels.Post.PostToAddDto)">
            <summary>
            Add post to database
            </summary>
            <param name="userId">User guid as a string </param>
            <param name="postToAdd"></param>
            <returns>Added post</returns>
            <response code="201"> Return created post</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If user not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostsController.PartiallyUpdatePost(System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{MyFaceApi.Api.Application.DtoModels.Post.PostToUpdateDto})">
            <summary>
            Update post in the database
            </summary>
            <param name="postId"></param>
            <param name="patchDocument"></param>
            <returns>
            Status 204 no content if the post has been updated
            </returns>
            <response code="204"> No content if the post has been updated</response>
            <response code="400"> If the postId is not valid guid</response>    
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.PostsController.DeletePost(System.String)">
            <summary>
            Remove the post from the database
            </summary>
            <param name="postId"></param>
            <returns>
            Status 204 no content if the post has been removed
            </returns>
            <response code="204"> No content if the post has been removed</response>
            <response code="400"> If the post is not valid</response>    
            <response code="500"> If internal error occured</response>
        </member>
        <member name="M:MyFaceApi.Api.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Return the found user
            </summary>
            <param name="userId">User guid as a string </param>
            <returns>Found user</returns>
            <response code="200"> Returns the found user</response>
            <response code="400"> If parameter is not a valid guid</response>    
            <response code="404"> If user not found</response>   
            <response code="500"> If internal error occured</response>
        </member>
    </members>
</doc>
